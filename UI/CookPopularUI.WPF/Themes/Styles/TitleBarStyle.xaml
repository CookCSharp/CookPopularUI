<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CookPopularUI.WPF"
                    xmlns:pt="https://github.cookpopulartoolkit/2021/xaml"
                    xmlns:ui="clr-namespace:CookPopularUI.WPF.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/CookPopularUI.WPF;component/Themes/Styles/ButtonStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="DefaultTitleBarStyle" TargetType="{x:Type ui:TitleBar}" BasedOn="{StaticResource ControlBaseStyle}">
        <Setter Property="Height" Value="{StaticResource DefaultControlHeight}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
        <Setter Property="FontSize" Value="{StaticResource ThirdTitleFontSize}" />
        <Setter Property="FontWeight" Value="ExtraBold" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Logo" Value="{x:Null}" />
        <Setter Property="local:FrameworkElementBaseAttached.CornerRadius" Value="2" />
        <Setter Property="local:FrameworkElementBaseAttached.IconWidth" Value="20" />
        <Setter Property="local:FrameworkElementBaseAttached.IconHeight" Value="20" />
        <Setter Property="local:FrameworkElementBaseAttached.IconMargin" Value="6 0 0 0" />
        <Setter Property="local:FrameworkElementBaseAttached.Brush" Value="{DynamicResource ControlForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ui:TitleBar}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding local:FrameworkElementBaseAttached.CornerRadius}">
                        <DockPanel>
                            <Path Width="{TemplateBinding local:FrameworkElementBaseAttached.IconWidth}"
                                  Height="{TemplateBinding local:FrameworkElementBaseAttached.IconHeight}"
                                  Data="{TemplateBinding Logo}"
                                  Fill="{TemplateBinding local:FrameworkElementBaseAttached.Brush}"
                                  Stretch="Uniform"
                                  Margin="{TemplateBinding local:FrameworkElementBaseAttached.IconMargin}"
                                  Visibility="{TemplateBinding Logo, Converter={pt:NullOrEmptyToVisibilityConverter}}" />
                            <Border Margin="0,2,0,0" Padding="{TemplateBinding Padding}">
                                <ContentPresenter RecognizesAccessKey="True"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="Center"
                                                  ContentSource="Title" />
                            </Border>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TitleBarSimpleStyle" TargetType="{x:Type ui:TitleBar}" BasedOn="{StaticResource FixedControlBaseStyle}">
        <Setter Property="Height" Value="{StaticResource DefaultControlHeight}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryThemeBrush}" />
        <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
        <Setter Property="FontSize" Value="{StaticResource ThirdTitleFontSize}" />
        <Setter Property="FontWeight" Value="ExtraBold" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="local:FrameworkElementBaseAttached.CornerRadius" Value="2" />
        <Setter Property="local:FrameworkElementBaseAttached.IconWidth" Value="10" />
        <Setter Property="local:FrameworkElementBaseAttached.IconHeight" Value="{StaticResource DefaultControlHeight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ui:TitleBar}">
                    <DockPanel>
                        <Rectangle Width="{TemplateBinding local:FrameworkElementBaseAttached.IconWidth}"
                                   Height="{TemplateBinding local:FrameworkElementBaseAttached.IconHeight}"
                                   Fill="{TemplateBinding Background}"
                                   RadiusX="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(local:FrameworkElementBaseAttached.CornerRadius).TopLeft}"
                                   RadiusY="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(local:FrameworkElementBaseAttached.CornerRadius).TopLeft}" />
                        <Border Margin="0,2,0,0" Padding="{TemplateBinding Padding}">
                            <ContentPresenter RecognizesAccessKey="True"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="Center"
                                              ContentSource="Title" />
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultTitleBarExStyle" TargetType="{x:Type ui:TitleBarEx}" BasedOn="{StaticResource ControlBaseStyle}">
        <Setter Property="Height" Value="{StaticResource DefaultControlHeight}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
        <Setter Property="FontSize" Value="{StaticResource ThirdTitleFontSize}" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="local:FrameworkElementBaseAttached.CornerRadius" Value="2" />
        <Setter Property="local:FrameworkElementBaseAttached.IconWidth" Value="15" />
        <Setter Property="local:FrameworkElementBaseAttached.IconHeight" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ui:TitleBarEx}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding local:FrameworkElementBaseAttached.CornerRadius}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MaxWidth="50" />
                                <ColumnDefinition />
                                <ColumnDefinition MaxWidth="50" />
                            </Grid.ColumnDefinitions>
                            <Button x:Name="PART_LeftButton" Grid.Column="0"
                                    Height="{TemplateBinding Height}"
                                    Command="{TemplateBinding LeftCommand}"
                                    IsEnabled="{TemplateBinding IsLeftLogoEnable}"
                                    local:FrameworkElementBaseAttached.IconGeometry="{TemplateBinding LeftLogo}"
                                    local:FrameworkElementBaseAttached.IconHeight="{TemplateBinding local:FrameworkElementBaseAttached.IconHeight}"
                                    local:FrameworkElementBaseAttached.IconWidth="{TemplateBinding local:FrameworkElementBaseAttached.IconWidth}"
                                    Visibility="{TemplateBinding IsShowLeftLogo, Converter={pt:BooleanToVisibilityConverter}}"
                                    Style="{StaticResource ButtonIconStyle}" />
                            <ContentPresenter Grid.Column="1"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              RecognizesAccessKey="True"
                                              Margin="0,2,0,0"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="Center"
                                              ContentSource="Content"
                                              TextElement.FontWeight="{TemplateBinding FontWeight}" />
                            <Button x:Name="PART_RightButton" Grid.Column="2"
                                    Height="{TemplateBinding Height}"
                                    Command="{TemplateBinding RightCommand}"
                                    IsEnabled="{TemplateBinding IsRightLogoEnable}"
                                    local:FrameworkElementBaseAttached.IconGeometry="{TemplateBinding RightLogo}"
                                    local:FrameworkElementBaseAttached.IconHeight="{TemplateBinding local:FrameworkElementBaseAttached.IconHeight}"
                                    local:FrameworkElementBaseAttached.IconWidth="{TemplateBinding local:FrameworkElementBaseAttached.IconWidth}"
                                    Visibility="{TemplateBinding IsShowRightLogo, Converter={pt:BooleanToVisibilityConverter}}"
                                    Style="{StaticResource ButtonIconStyle}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>