<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CookPopularUI.WPF"
                    xmlns:ui="clr-namespace:CookPopularUI.WPF.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/CookPopularUI.WPF;component/Themes/BaseStyles/TextBoxBaseBaseStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="DefaultTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxBaseBaseStyle}">
        <Setter Property="local:TextElementAttached.PlaceHolder" Value="" />
        <Setter Property="local:TextElementAttached.PlaceHolderBrush" Value="{DynamicResource FieldPlaceHolderBrush}" />
        <Setter Property="local:FrameworkElementBaseAttached.CornerRadius" Value="2" />
        <Setter Property="ui:TextBoxBaseAssistant.IsFirstChecked" Value="True" />
        <Setter Property="ui:TextBoxBaseAssistant.IsGotFocus" Value="{Binding RelativeSource={RelativeSource Self}, Path=IsFocused}" />
        <Setter Property="ui:TextBoxBaseAssistant.IsTrimming" Value="False" />
        <Setter Property="ui:TextBoxBaseAssistant.EllipsisPlacement" Value="Center" />
        <Setter Property="ui:TextBoxBaseAssistant.IsShowToolTip" Value="True" />
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="True" />
                    <Condition Property="IsSelectionActive" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{StaticResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextBoxValidationStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBoxStyle}">
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorBaseTemplate}" />
    </Style>

    <Style x:Key="TextBoxAddClearButtonStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBoxStyle}">
        <Setter Property="local:FrameworkElementBaseAttached.IconMargin" Value="2" />
        <Setter Property="local:TextElementAttached.IsAddClearButton" Value="True" />
        <Setter Property="local:FrameworkElementBaseAttached.IconWidth" Value="15" />
        <Setter Property="local:FrameworkElementBaseAttached.IconHeight" Value="15" />
        <Setter Property="local:FrameworkElementBaseAttached.IconMargin" Value="0" />
    </Style>

    <Style x:Key="TextBoxValidationAddClearButtonStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxAddClearButtonStyle}">
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorBaseTemplate}" />
    </Style>

</ResourceDictionary>