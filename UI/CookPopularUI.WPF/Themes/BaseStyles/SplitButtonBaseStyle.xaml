<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CookPopularUI.WPF"
                    xmlns:pt="https://github.cookpopulartoolkit/2021/xaml"
                    xmlns:ui="clr-namespace:CookPopularUI.WPF.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/CookPopularUI.WPF;component/Themes/Styles/ToggleButtonStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="SplitButtonBaseStyle" TargetType="{x:Type ui:SplitButton}" BasedOn="{StaticResource SingleControlBaseStyle}">
        <Setter Property="Padding" Value="6,0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ui:SplitButton}">
                    <Border x:Name="RootBorder"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding local:FrameworkElementBaseAttached.CornerRadius}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Height}" />
                            </Grid.ColumnDefinitions>
                            <ui:SimpleGrid x:Name="PART_Content" Background="Transparent">
                                <StackPanel Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Orientation="Horizontal">
                                    <Path x:Name="PART_Path"
                                          Width="{TemplateBinding local:FrameworkElementBaseAttached.IconWidth}"
                                          Height="{TemplateBinding local:FrameworkElementBaseAttached.IconHeight}"
                                          Data="{TemplateBinding local:FrameworkElementBaseAttached.IconGeometry}"
                                          Fill="{TemplateBinding Foreground}"
                                          Stretch="Uniform" />
                                    <ContentPresenter x:Name="PART_ContentPresenter"
                                                      RecognizesAccessKey="True"
                                                      Margin="8,0,0,0" SnapsToDevicePixels="True"
                                                      VerticalAlignment="Center" />
                                </StackPanel>
                            </ui:SimpleGrid>
                            <ToggleButton x:Name="PART_Arrow" Grid.Column="1"
                                          BorderThickness="{TemplateBinding BorderThickness, Converter={pt:ThicknessToSideThicknessConverter}}"
                                          Foreground="{TemplateBinding Foreground}"
                                          Background="Transparent"
                                          IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}"
                                          local:FrameworkElementBaseAttached.CornerRadius="{TemplateBinding local:FrameworkElementBaseAttached.CornerRadius, Converter={pt:CornerRadiusToOrientationCornerRadiusConverter}, ConverterParameter=Right}"
                                          local:FrameworkElementBaseAttached.IconHeight="14" local:FrameworkElementBaseAttached.IconWidth="14"
                                          ui:ToggleButtonAssistant.OnCheckedGeometry="{StaticResource TopGeometry}"
                                          ui:ToggleButtonAssistant.UnCheckedGeometry="{StaticResource BottomGeometry}"
                                          Style="{StaticResource ToggleButtonDoubbleIconStyle}" />
                            <Popup MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                   AllowsTransparency="True"
                                   IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}"
                                   Placement="Bottom"
                                   PlacementTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                   PopupAnimation="Fade" StaysOpen="False">
                                <Border MinWidth="{Binding ElementName=RootBorder, Path=ActualWidth}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1,0,1,1"
                                        Background="{DynamicResource SystemBackgroundBrush}"
                                        Margin="5"
                                        Effect="{StaticResource ShadowEffectDepth0}">
                                    <ScrollViewer RenderOptions.ClearTypeHint="Enabled">
                                        <ContentPresenter Content="{TemplateBinding DropDownContent}" Margin="0,5" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_ContentPresenter" />
                        </Trigger>
                        <Trigger Property="local:FrameworkElementBaseAttached.IconGeometry" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Path" />
                            <Setter Property="Margin" Value="0" TargetName="PART_ContentPresenter" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="PART_Content">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ButtonBase}, Path=(local:FrameworkElementBaseAttached.ControlMouseOverBrush)}" TargetName="PART_Content" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ButtonBase}, Path=(local:FrameworkElementBaseAttached.ControlPressBrush)}" TargetName="PART_Content" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource UnEnabledBrush}" TargetName="RootBorder" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>