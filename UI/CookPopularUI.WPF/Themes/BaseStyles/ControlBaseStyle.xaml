<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CookPopularUI.WPF"
                    xmlns:ui="clr-namespace:CookPopularUI.WPF.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/CookPopularUI.WPF;component/Resources/Dictionaries/EffectShadow.xaml" />
        <ResourceDictionary Source="pack://application:,,,/CookPopularUI.WPF;component/Resources/Dictionaries/FontFamily.xaml" />
        <ResourceDictionary Source="pack://application:,,,/CookPopularUI.WPF;component/Resources/Dictionaries/GeometryFigure.xaml" />
        <ResourceDictionary Source="pack://application:,,,/CookPopularUI.WPF;component/Resources/Dictionaries/SystemConstValue.xaml" />
        <ResourceDictionary Source="pack://application:,,,/CookPopularUI.WPF;component/Resources/Dictionaries/ValueConverter.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true"
                               Stroke="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeDashArray="1 2" StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="10,0,0,0" SnapsToDevicePixels="true"
                               Stroke="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeDashArray="1 2" StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ContextMenu x:Key="DefaultContextMenu">
        <!--  Command="{x:Static ApplicationCommands.Cut}"  -->
        <MenuItem Command="Cut">
            <MenuItem.Icon>
                <Path Data="{StaticResource CutGeometry}" Fill="{DynamicResource PrimaryForegroundBrush}" Stretch="Uniform" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Command="Copy">
            <MenuItem.Icon>
                <Path Data="{StaticResource CopyGeometry}" Fill="{DynamicResource PrimaryForegroundBrush}" Stretch="Uniform" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Command="Paste">
            <MenuItem.Icon>
                <Path Data="{StaticResource PasteGeometry}" Fill="{DynamicResource PrimaryForegroundBrush}" Stretch="Uniform" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Command="SelectAll">
            <MenuItem.Icon>
                <Path Data="{StaticResource SelectAllGeometry}" Fill="{DynamicResource PrimaryForegroundBrush}" Stretch="Uniform" />
            </MenuItem.Icon>
        </MenuItem>
    </ContextMenu>

    <ContextMenu x:Key="TrayIconContextMenu">
        <MenuItem Header="打开" Command="{x:Static local:ControlCommands.OpenApplicationCommand}">
            <MenuItem.Icon>
                <Path Data="{DynamicResource OpenGeometry}" Fill="{DynamicResource PrimaryForegroundBrush}" Stretch="Uniform" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="隐藏到托盘" Command="{x:Static local:ControlCommands.HideApplicationCommand}">
            <MenuItem.Icon>
                <Path Data="{DynamicResource HideGeometry}" Fill="{DynamicResource PrimaryForegroundBrush}" Stretch="Uniform" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="退出" Command="{x:Static local:ControlCommands.ExitApplicationCommand}">
            <MenuItem.Icon>
                <Path Data="{DynamicResource ExitGeometry}" Fill="{DynamicResource PrimaryForegroundBrush}" Stretch="Uniform" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="欢迎你，写代码的厨子😀" />
    </ContextMenu>

    <!--  针对背景色可不需要的控件  -->
    <Style x:Key="FixedControlBaseStyle" TargetType="{x:Type Control}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource SystemBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource RobotoFonts}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6" />
                <Setter Property="Background" Value="{DynamicResource UnEnabledBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  针对背景色需要的控件  -->
    <Style x:Key="ControlBaseStyle" TargetType="{x:Type Control}" BasedOn="{StaticResource FixedControlBaseStyle}">
        <Setter Property="Foreground" Value="{DynamicResource ControlForegroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryThemeBrush}" />
    </Style>

    <Style x:Key="SingleControlBaseStyle" TargetType="{x:Type Control}" BasedOn="{StaticResource ControlBaseStyle}">
        <Setter Property="Height" Value="{StaticResource DefaultControlHeight}" />
        <Setter Property="ui:RippleAssist.Feedback" Value="{DynamicResource RippleFeedbackBrush}" />
    </Style>

    <Style x:Key="InputControlBaseStyle" TargetType="{x:Type Control}" BasedOn="{StaticResource FixedControlBaseStyle}">
        <Setter Property="Height" Value="{StaticResource DefaultControlHeight}" />
        <Setter Property="Padding" Value="{StaticResource DefaultPadding}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ContextMenu" Value="{StaticResource DefaultContextMenu}" />
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorBaseTemplate}" />
    </Style>

</ResourceDictionary>