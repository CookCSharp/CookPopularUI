<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CookPopularUI.WPF"
                    xmlns:pt="https://github.cookpopulartoolkit/2021/xaml"
                    xmlns:ui="clr-namespace:CookPopularUI.WPF.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/CookPopularUI.WPF;component/Themes/Styles/ToggleButtonStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ClockBaseStyle" TargetType="{x:Type ui:Clock}" BasedOn="{StaticResource ControlBaseStyle}">
        <Setter Property="Width" Value="200" />
        <Setter Property="Height" Value="300" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ui:Clock}">
                    <ControlTemplate.Resources>
                        <ControlTemplate x:Key="ClockRadioButtonTemplate" TargetType="{x:Type RadioButton}">
                            <Border Width="30" Height="30"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="15">
                                <ContentPresenter x:Name="Content" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Background" Value="{x:Null}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ControlPressBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </ControlTemplate.Resources>
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding local:FrameworkElementBaseAttached.CornerRadius}"
                            Margin="0,3">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="50" />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0"
                                       Text="{TemplateBinding CurrentTime}"
                                       FontSize="20" FontWeight="DemiBold"
                                       HorizontalAlignment="Center" VerticalAlignment="Center" />
                            <Border Grid.Row="1"
                                    Width="150" Height="150"
                                    BorderBrush="{TemplateBinding Foreground}"
                                    BorderThickness="5"
                                    CornerRadius="75">
                                <ui:SimpleGrid x:Name="PART_Ticks" Background="Transparent">
                                    <TextBlock Text="12"
                                               FontWeight="DemiBold"
                                               Margin="0,10,0,0"
                                               HorizontalAlignment="Center" VerticalAlignment="Top" />
                                    <TextBlock Text="3"
                                               FontWeight="DemiBold"
                                               Margin="0,0,12,0"
                                               HorizontalAlignment="Right" VerticalAlignment="Center" />
                                    <TextBlock Text="6"
                                               FontWeight="DemiBold"
                                               Margin="0,0,0,10"
                                               HorizontalAlignment="Center" VerticalAlignment="Bottom" />
                                    <TextBlock Text="9"
                                               FontWeight="DemiBold"
                                               Margin="12,0,0,0"
                                               HorizontalAlignment="Left" VerticalAlignment="Center" />
                                </ui:SimpleGrid>
                            </Border>
                            <UniformGrid x:Name="PART_UniformGrid" Grid.Row="2" Columns="3">
                                <RadioButton x:Name="PART_Am"
                                             Content="上午"
                                             Foreground="{TemplateBinding Foreground}"
                                             IsChecked="True"
                                             Template="{StaticResource ClockRadioButtonTemplate}" />
                                <RadioButton x:Name="PART_Pm"
                                             Content="下午"
                                             Foreground="{TemplateBinding Foreground}"
                                             Template="{StaticResource ClockRadioButtonTemplate}" />
                                <Button Width="30" Height="30"
                                        Content="重置"
                                        Command="{x:Static local:ControlCommands.ResetCommand}"
                                        local:FrameworkElementBaseAttached.CornerRadius="15" />
                                <Button Width="30" Height="30"
                                        Content="确定"
                                        Command="{x:Static local:ControlCommands.ConfirmCommand}"
                                        local:FrameworkElementBaseAttached.CornerRadius="15"
                                        Visibility="{TemplateBinding ui:ClockAssistant.IsAddConfirmButton, Converter={pt:BooleanToVisibilityConverter}}" />
                            </UniformGrid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ui:ClockAssistant.IsAddConfirmButton" Value="True">
                            <Setter Property="Columns" Value="4" TargetName="PART_UniformGrid" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TimePickerBaseStyle" TargetType="{x:Type ui:TimePicker}" BasedOn="{StaticResource InputControlBaseStyle}">
        <Setter Property="CurrentTime" Value="{x:Null}" />
        <Setter Property="ui:ClockAssistant.IsAddConfirmButton" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ui:TimePicker}">
                    <Border x:Name="RootBorder"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="Transparent"
                            CornerRadius="{TemplateBinding local:FrameworkElementBaseAttached.CornerRadius}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="30" />
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="PART_TextBox" Grid.Column="0"
                                     Text="{TemplateBinding CurrentTime}"
                                     BorderThickness="0"
                                     Foreground="{TemplateBinding Foreground}"
                                     Background="Transparent"
                                     Padding="{TemplateBinding Padding}"
                                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                     local:FrameworkElementBaseAttached.CornerRadius="{TemplateBinding local:FrameworkElementBaseAttached.CornerRadius}"
                                     local:TextElementAttached.PlaceHolder="{TemplateBinding local:TextElementAttached.PlaceHolder}"
                                     ui:TextBoxBaseAssistant.IsTrimming="False" />
                            <ToggleButton x:Name="PART_Button" Grid.Column="1"
                                          Foreground="{TemplateBinding Foreground}"
                                          local:FrameworkElementBaseAttached.IconGeometry="{StaticResource ClockGeometry}"
                                          local:FrameworkElementBaseAttached.IconHeight="{TemplateBinding local:FrameworkElementBaseAttached.IconHeight}"
                                          local:FrameworkElementBaseAttached.IconWidth="{TemplateBinding local:FrameworkElementBaseAttached.IconWidth}"
                                          Style="{StaticResource ToggleButtonTransparentIconStyle}" />
                            <Popup x:Name="PART_Popup"
                                   AllowsTransparency="True"
                                   IsOpen="{Binding ElementName=PART_Button, Path=IsChecked, Mode=TwoWay}"
                                   Placement="Bottom"
                                   PlacementTarget="{Binding ElementName=RootBorder}"
                                   PopupAnimation="Slide" StaysOpen="False">
                                <ui:Clock x:Name="PART_Clock" Effect="{StaticResource ShadowEffectDepth0}" ui:ClockAssistant.IsAddConfirmButton="{TemplateBinding ui:ClockAssistant.IsAddConfirmButton}" />
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlMouseOverBrush}" TargetName="RootBorder" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlPressBrush}" TargetName="RootBorder" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource FieldValidationErrorBrush}" TargetName="RootBorder" />
                            <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderThickness, Converter={pt:ThicknessToTimesThicknessConverter}, ConverterParameter=1.2}" TargetName="RootBorder" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>